name: Release Docker Images

on:
  push:
    paths:
      - '.cdtools/*-*.json'

permissions:
  contents: write
  packages: write

jobs:
  analyze-docker-workspaces:
    name: Analyze Docker Workspaces to Release
    runs-on: ubuntu-latest
    outputs:
      docker-matrix: ${{ steps.analyze.outputs.docker-matrix }}
      has-docker: ${{ steps.analyze.outputs.has-docker }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Verify analyze script exists
        run: |
          if [ ! -f ".github/scripts/analyze-workspaces.sh" ]; then
            echo "‚ùå analyze-workspaces.sh not found! Run 'cd-tools init' to set up required scripts."
            exit 1
          fi
          
          chmod +x .github/scripts/analyze-workspaces.sh
          echo "‚úÖ analyze-workspaces.sh is ready"

      - name: Analyze Docker workspaces from branch info
        id: analyze
        run: .github/scripts/analyze-workspaces.sh docker

  publish-docker:
    name: Publish Docker Images
    needs: analyze-docker-workspaces
    if: ${{ needs.analyze-docker-workspaces.outputs.has-docker == 'true' }}
    strategy:
      matrix: ${{ fromJson(needs.analyze-docker-workspaces.outputs.docker-matrix) }}
      fail-fast: false
    uses: ./.github/workflows/publish-container-image.yml
    with:
      workspace_path: ${{ matrix.workspace_path }}
      workspace_version: ${{ matrix.workspace_version }}
    secrets: inherit

  release-summary:
    name: Docker Release Summary
    needs: [analyze-docker-workspaces, publish-docker]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Release Summary
        run: |
          echo "üê≥ Docker Release Summary"
          echo "========================"
          echo ""
          echo "üìã Workspace analysis:"
          echo "  - Docker workspaces found: ${{ needs.analyze-docker-workspaces.outputs.has-docker }}"
          echo ""

          if [ "${{ needs.publish-docker.result }}" = "failure" ]; then
            echo "‚ùå Docker releases failed. Please check the logs above."
            exit 1
          elif [ "${{ needs.publish-docker.result }}" = "success" ]; then
            echo "‚úÖ All Docker releases completed successfully!"
          elif [ "${{ needs.analyze-docker-workspaces.outputs.has-docker }}" = "false" ]; then
            echo "‚ÑπÔ∏è  No Docker workspaces were configured for release."
          else
            echo "‚ÑπÔ∏è  Docker release completed."
          fi
