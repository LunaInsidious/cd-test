name: Publish npm Package

on:
  workflow_call:
    inputs:
      workspace_path:
        description: 'Path to the workspace to publish'
        required: true
        type: string
      workspace_version:
        description: 'Version to publish for the workspace'
        required: true
        type: string
      release_tag:
        description: 'Release tag (e.g., alpha, rc, stable)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  publish:
    name: Publish npm Package (${{ inputs.workspace_path }})
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          token: ${{ secrets.GITHUB_TOKEN }}
          # Defaults to the user or organization that owns the workflow file
          scope: ${{ '@' }}${{ github.repository_owner }}
      - name: Get package name to be released
        id: get-name
        working-directory: ${{ inputs.workspace_path }}
        run: node -e "console.log('name=' + require('./package.json').name)" >> "$GITHUB_OUTPUT"
      - name: Verify version matches expected
        working-directory: ${{ inputs.workspace_path }}
        run: |
          ACTUAL_VERSION=$(node -e "console.log(require('./package.json').version)")
          if [ "$ACTUAL_VERSION" != "${{ inputs.workspace_version }}" ]; then
            echo "❌ Version mismatch: expected ${{ inputs.workspace_version }}, got $ACTUAL_VERSION"
            exit 1
          fi
          echo "✅ Version verified: $ACTUAL_VERSION"
      - name: Install dependencies
        working-directory: ${{ inputs.workspace_path }}
        run: npm ci --omit=dev
      # Optional: Build the package if needed
      - name: build package
        run: tsc --build ${{ inputs.build-execute-workspace }}
      - name: Publish npm package
        working-directory: ${{ inputs.workspace_path }}
        run: |
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >> .npmrc

          # Set npm tag based on release tag
          if [ "${{ inputs.release_tag }}" = "stable" ]; then
            echo "📦 Publishing with 'latest' tag for stable release"
            npm publish
          else
            echo "📦 Publishing with '${{ inputs.release_tag }}' tag for pre-release"
            npm publish --tag "${{ inputs.release_tag }}"
          fi
        env:
          NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Add Tag
        run: |
          TAG_NAME="${WORKSPACE_PATH//\//-}-v${VERSION}"
          git tag "$TAG_NAME"
          git push --tags origin "$TAG_NAME"
        env:
          WORKSPACE_PATH: ${{ inputs.workspace_path }}
          VERSION: ${{ inputs.workspace_version }}
